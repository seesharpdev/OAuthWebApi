//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using OAuthWebApi.Models;

[assembly: EdmSchema()]
#region EDM Relationship Metadata

[assembly: EdmRelationship("OAuthModel", "UserClientAuthorization", "User", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(User), "ClientAuthorization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClientAuthorization))]
[assembly: EdmRelationship("OAuthModel", "ClientClientAuthorization", "Client", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Client), "ClientAuthorization", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(ClientAuthorization))]

#endregion

namespace OAuthWebApi.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class OAuthModelContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new OAuthModelContainer object using the connection string found in the 'OAuthModelContainer' section of the application configuration file.
        /// </summary>
        public OAuthModelContainer() : base("name=OAuthModelContainer", "OAuthModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OAuthModelContainer object.
        /// </summary>
        public OAuthModelContainer(string connectionString) : base(connectionString, "OAuthModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new OAuthModelContainer object.
        /// </summary>
        public OAuthModelContainer(EntityConnection connection) : base(connection, "OAuthModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ClientAuthorization> ClientAuthorizations
        {
            get
            {
                if ((_ClientAuthorizations == null))
                {
                    _ClientAuthorizations = base.CreateObjectSet<ClientAuthorization>("ClientAuthorizations");
                }
                return _ClientAuthorizations;
            }
        }
        private ObjectSet<ClientAuthorization> _ClientAuthorizations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Client> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Client>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Client> _Clients;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Nonce> Nonces
        {
            get
            {
                if ((_Nonces == null))
                {
                    _Nonces = base.CreateObjectSet<Nonce>("Nonces");
                }
                return _Nonces;
            }
        }
        private ObjectSet<Nonce> _Nonces;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SymmetricCryptoKey> SymmetricCryptoKeys
        {
            get
            {
                if ((_SymmetricCryptoKeys == null))
                {
                    _SymmetricCryptoKeys = base.CreateObjectSet<SymmetricCryptoKey>("SymmetricCryptoKeys");
                }
                return _SymmetricCryptoKeys;
            }
        }
        private ObjectSet<SymmetricCryptoKey> _SymmetricCryptoKeys;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClientAuthorizations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClientAuthorizations(ClientAuthorization clientAuthorization)
        {
            base.AddObject("ClientAuthorizations", clientAuthorization);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Clients EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClients(Client client)
        {
            base.AddObject("Clients", client);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Nonces EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToNonces(Nonce nonce)
        {
            base.AddObject("Nonces", nonce);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SymmetricCryptoKeys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSymmetricCryptoKeys(SymmetricCryptoKey symmetricCryptoKey)
        {
            base.AddObject("SymmetricCryptoKeys", symmetricCryptoKey);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityType(NamespaceName="OAuthModel", Name="Client")]
    [Serializable()]
    [DataContract(IsReference=true)]
    public partial class Client : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Client object.
        /// </summary>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="clientIdentifier">Initial value of the ClientIdentifier property.</param>
        /// <param name="callback">Initial value of the Callback property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="clientType">Initial value of the ClientType property.</param>
        public static Client CreateClient(global::System.Int32 clientId, global::System.String clientIdentifier, global::System.String callback, global::System.String name, global::System.Int32 clientType)
        {
            Client client = new Client();
            client.ClientId = clientId;
            client.ClientIdentifier = clientIdentifier;
            client.Callback = callback;
            client.Name = name;
            client.ClientType = clientType;
            return client;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=true, IsNullable=false)]
        [DataMember()]
        public global::System.Int32 ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                if (_ClientId != value)
                {
                    OnClientIdChanging(value);
                    ReportPropertyChanging("ClientId");
                    _ClientId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ClientId");
                    OnClientIdChanged();
                }
            }
        }
        private global::System.Int32 _ClientId;
        partial void OnClientIdChanging(global::System.Int32 value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.String ClientIdentifier
        {
            get
            {
                return _ClientIdentifier;
            }
            set
            {
                OnClientIdentifierChanging(value);
                ReportPropertyChanging("ClientIdentifier");
                _ClientIdentifier = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ClientIdentifier");
                OnClientIdentifierChanged();
            }
        }
        private global::System.String _ClientIdentifier;
        partial void OnClientIdentifierChanging(global::System.String value);
        partial void OnClientIdentifierChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=true)]
        [DataMember()]
        public global::System.String ClientSecret
        {
            get
            {
                return _ClientSecret;
            }
            set
            {
                OnClientSecretChanging(value);
                ReportPropertyChanging("ClientSecret");
                _ClientSecret = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ClientSecret");
                OnClientSecretChanged();
            }
        }
        private global::System.String _ClientSecret;
        partial void OnClientSecretChanging(global::System.String value);
        partial void OnClientSecretChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.String Callback
        {
            get
            {
                return _Callback;
            }
            set
            {
                OnCallbackChanging(value);
                ReportPropertyChanging("Callback");
                _Callback = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Callback");
                OnCallbackChanged();
            }
        }
        private global::System.String _Callback;
        partial void OnCallbackChanging(global::System.String value);
        partial void OnCallbackChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.Int32 ClientType
        {
            get
            {
                return _ClientType;
            }
            set
            {
                OnClientTypeChanging(value);
                ReportPropertyChanging("ClientType");
                _ClientType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientType");
                OnClientTypeChanged();
            }
        }
        private global::System.Int32 _ClientType;
        partial void OnClientTypeChanging(global::System.Int32 value);
        partial void OnClientTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnore()]
        [SoapIgnore()]
        [DataMember()]
        [EdmRelationshipNavigationProperty("OAuthModel", "ClientClientAuthorization", "ClientAuthorization")]
        public EntityCollection<ClientAuthorization> ClientAuthorizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientAuthorization>("OAuthModel.ClientClientAuthorization", "ClientAuthorization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientAuthorization>("OAuthModel.ClientClientAuthorization", "ClientAuthorization", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityType(NamespaceName="OAuthModel", Name="ClientAuthorization")]
    [Serializable()]
    [DataContract(IsReference=true)]
    public partial class ClientAuthorization : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ClientAuthorization object.
        /// </summary>
        /// <param name="authorizationId">Initial value of the AuthorizationId property.</param>
        /// <param name="createdOnUtc">Initial value of the CreatedOnUtc property.</param>
        /// <param name="clientId">Initial value of the ClientId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="scope">Initial value of the Scope property.</param>
        public static ClientAuthorization CreateClientAuthorization(global::System.Int32 authorizationId, global::System.DateTime createdOnUtc, global::System.Int32 clientId, global::System.Int32 userId, global::System.String scope)
        {
            ClientAuthorization clientAuthorization = new ClientAuthorization();
            clientAuthorization.AuthorizationId = authorizationId;
            clientAuthorization.CreatedOnUtc = createdOnUtc;
            clientAuthorization.ClientId = clientId;
            clientAuthorization.UserId = userId;
            clientAuthorization.Scope = scope;
            return clientAuthorization;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=true, IsNullable=false)]
        [DataMember()]
        public global::System.Int32 AuthorizationId
        {
            get
            {
                return _AuthorizationId;
            }
            set
            {
                if (_AuthorizationId != value)
                {
                    OnAuthorizationIdChanging(value);
                    ReportPropertyChanging("AuthorizationId");
                    _AuthorizationId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AuthorizationId");
                    OnAuthorizationIdChanged();
                }
            }
        }
        private global::System.Int32 _AuthorizationId;
        partial void OnAuthorizationIdChanging(global::System.Int32 value);
        partial void OnAuthorizationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.DateTime CreatedOnUtc
        {
            get
            {
                return _CreatedOnUtc;
            }
            set
            {
                OnCreatedOnUtcChanging(value);
                ReportPropertyChanging("CreatedOnUtc");
                _CreatedOnUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreatedOnUtc");
                OnCreatedOnUtcChanged();
            }
        }
        private global::System.DateTime _CreatedOnUtc;
        partial void OnCreatedOnUtcChanging(global::System.DateTime value);
        partial void OnCreatedOnUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.Int32 ClientId
        {
            get
            {
                return _ClientId;
            }
            set
            {
                OnClientIdChanging(value);
                ReportPropertyChanging("ClientId");
                _ClientId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ClientId");
                OnClientIdChanged();
            }
        }
        private global::System.Int32 _ClientId;
        partial void OnClientIdChanging(global::System.Int32 value);
        partial void OnClientIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.String Scope
        {
            get
            {
                return _Scope;
            }
            set
            {
                OnScopeChanging(value);
                ReportPropertyChanging("Scope");
                _Scope = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Scope");
                OnScopeChanged();
            }
        }
        private global::System.String _Scope;
        partial void OnScopeChanging(global::System.String value);
        partial void OnScopeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=true)]
        [DataMember()]
        public Nullable<global::System.DateTime> ExpirationDateUtc
        {
            get
            {
                return _ExpirationDateUtc;
            }
            set
            {
                OnExpirationDateUtcChanging(value);
                ReportPropertyChanging("ExpirationDateUtc");
                _ExpirationDateUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpirationDateUtc");
                OnExpirationDateUtcChanged();
            }
        }
        private Nullable<global::System.DateTime> _ExpirationDateUtc;
        partial void OnExpirationDateUtcChanging(Nullable<global::System.DateTime> value);
        partial void OnExpirationDateUtcChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnore()]
        [SoapIgnore()]
        [DataMember()]
        [EdmRelationshipNavigationProperty("OAuthModel", "UserClientAuthorization", "User")]
        public User User
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OAuthModel.UserClientAuthorization", "User").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OAuthModel.UserClientAuthorization", "User").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [Browsable(false)]
        [DataMember()]
        public EntityReference<User> UserReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("OAuthModel.UserClientAuthorization", "User");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("OAuthModel.UserClientAuthorization", "User", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnore()]
        [SoapIgnore()]
        [DataMember()]
        [EdmRelationshipNavigationProperty("OAuthModel", "ClientClientAuthorization", "Client")]
        public Client Client
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("OAuthModel.ClientClientAuthorization", "Client").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("OAuthModel.ClientClientAuthorization", "Client").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [Browsable(false)]
        [DataMember()]
        public EntityReference<Client> ClientReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Client>("OAuthModel.ClientClientAuthorization", "Client");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Client>("OAuthModel.ClientClientAuthorization", "Client", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityType(NamespaceName="OAuthModel", Name="Nonce")]
    [Serializable()]
    [DataContract(IsReference=true)]
    public partial class Nonce : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Nonce object.
        /// </summary>
        /// <param name="context">Initial value of the Context property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        public static Nonce CreateNonce(global::System.String context, global::System.String code, global::System.DateTime timestamp)
        {
            Nonce nonce = new Nonce();
            nonce.Context = context;
            nonce.Code = code;
            nonce.Timestamp = timestamp;
            return nonce;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=true, IsNullable=false)]
        [DataMember()]
        public global::System.String Context
        {
            get
            {
                return _Context;
            }
            set
            {
                if (_Context != value)
                {
                    OnContextChanging(value);
                    ReportPropertyChanging("Context");
                    _Context = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Context");
                    OnContextChanged();
                }
            }
        }
        private global::System.String _Context;
        partial void OnContextChanging(global::System.String value);
        partial void OnContextChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=true, IsNullable=false)]
        [DataMember()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                if (_Code != value)
                {
                    OnCodeChanging(value);
                    ReportPropertyChanging("Code");
                    _Code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Code");
                    OnCodeChanged();
                }
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=true, IsNullable=false)]
        [DataMember()]
        public global::System.DateTime Timestamp
        {
            get
            {
                return _Timestamp;
            }
            set
            {
                if (_Timestamp != value)
                {
                    OnTimestampChanging(value);
                    ReportPropertyChanging("Timestamp");
                    _Timestamp = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Timestamp");
                    OnTimestampChanged();
                }
            }
        }
        private global::System.DateTime _Timestamp;
        partial void OnTimestampChanging(global::System.DateTime value);
        partial void OnTimestampChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityType(NamespaceName="OAuthModel", Name="SymmetricCryptoKey")]
    [Serializable()]
    [DataContract(IsReference=true)]
    public partial class SymmetricCryptoKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SymmetricCryptoKey object.
        /// </summary>
        /// <param name="bucket">Initial value of the Bucket property.</param>
        /// <param name="handle">Initial value of the Handle property.</param>
        /// <param name="expiresUtc">Initial value of the ExpiresUtc property.</param>
        /// <param name="secret">Initial value of the Secret property.</param>
        public static SymmetricCryptoKey CreateSymmetricCryptoKey(global::System.String bucket, global::System.String handle, global::System.DateTime expiresUtc, global::System.Byte[] secret)
        {
            SymmetricCryptoKey symmetricCryptoKey = new SymmetricCryptoKey();
            symmetricCryptoKey.Bucket = bucket;
            symmetricCryptoKey.Handle = handle;
            symmetricCryptoKey.ExpiresUtc = expiresUtc;
            symmetricCryptoKey.Secret = secret;
            return symmetricCryptoKey;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=true, IsNullable=false)]
        [DataMember()]
        public global::System.String Bucket
        {
            get
            {
                return _Bucket;
            }
            set
            {
                if (_Bucket != value)
                {
                    OnBucketChanging(value);
                    ReportPropertyChanging("Bucket");
                    _Bucket = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Bucket");
                    OnBucketChanged();
                }
            }
        }
        private global::System.String _Bucket;
        partial void OnBucketChanging(global::System.String value);
        partial void OnBucketChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=true, IsNullable=false)]
        [DataMember()]
        public global::System.String Handle
        {
            get
            {
                return _Handle;
            }
            set
            {
                if (_Handle != value)
                {
                    OnHandleChanging(value);
                    ReportPropertyChanging("Handle");
                    _Handle = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Handle");
                    OnHandleChanged();
                }
            }
        }
        private global::System.String _Handle;
        partial void OnHandleChanging(global::System.String value);
        partial void OnHandleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.DateTime ExpiresUtc
        {
            get
            {
                return _ExpiresUtc;
            }
            set
            {
                OnExpiresUtcChanging(value);
                ReportPropertyChanging("ExpiresUtc");
                _ExpiresUtc = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExpiresUtc");
                OnExpiresUtcChanged();
            }
        }
        private global::System.DateTime _ExpiresUtc;
        partial void OnExpiresUtcChanging(global::System.DateTime value);
        partial void OnExpiresUtcChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.Byte[] Secret
        {
            get
            {
                return StructuralObject.GetValidValue(_Secret);
            }
            set
            {
                OnSecretChanging(value);
                ReportPropertyChanging("Secret");
                _Secret = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Secret");
                OnSecretChanged();
            }
        }
        private global::System.Byte[] _Secret;
        partial void OnSecretChanging(global::System.Byte[] value);
        partial void OnSecretChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityType(NamespaceName="OAuthModel", Name="User")]
    [Serializable()]
    [DataContract(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        public static User CreateUser(global::System.Int32 id, global::System.String username, global::System.String password)
        {
            User user = new User();
            user.Id = id;
            user.Username = username;
            user.Password = password;
            return user;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=true, IsNullable=false)]
        [DataMember()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarProperty(EntityKeyProperty=false, IsNullable=false)]
        [DataMember()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnore()]
        [SoapIgnore()]
        [DataMember()]
        [EdmRelationshipNavigationProperty("OAuthModel", "UserClientAuthorization", "ClientAuthorization")]
        public EntityCollection<ClientAuthorization> ClientAuthorizations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ClientAuthorization>("OAuthModel.UserClientAuthorization", "ClientAuthorization");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ClientAuthorization>("OAuthModel.UserClientAuthorization", "ClientAuthorization", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
